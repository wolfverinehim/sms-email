#!/usr/bin/env python3
"""
Script para crear el ejecutable IBA-SoftEnvioSMS.exe
"""

import subprocess
import os
import sys
import shutil

def crear_ejecutable_principal():
    """Crea el ejecutable principal usando PyInstaller"""
    print("üîß CREANDO EJECUTABLE IBA-SoftEnvioSMS.exe")
    print("=" * 60)
    
    # Verificar que el archivo principal existe
    if not os.path.exists("../src/envio_sms_email.py"):
        print("‚ùå Error: No se encuentra src/envio_sms_email.py")
        return False
    
    print("üìÇ Limpiando archivos anteriores...")
    # Limpiar directorios anteriores
    if os.path.exists("../dist"):
        shutil.rmtree("../dist")
    if os.path.exists("../build"):
        shutil.rmtree("../build")
    if os.path.exists("IBA-SoftEnvioSMS.spec"):
        os.remove("IBA-SoftEnvioSMS.spec")
    
    print("üèóÔ∏è Generando ejecutable...")
    
    # Comando PyInstaller con opciones optimizadas
    comando = [
        "../.venv/Scripts/pyinstaller.exe",
        "--onefile",                          # Un solo archivo ejecutable
        "--console",                          # Mantener ventana de consola
        "--name=IBA-SoftEnvioSMS",           # Nombre del ejecutable
        "--clean",                           # Limpiar cache
        "--noconfirm",                       # No pedir confirmaci√≥n
        "--add-data=config/requirements.txt;.",     # Incluir requirements.txt
        "src/envio_sms_email.py"                 # Archivo principal
    ]
    
    try:
        print("üîÑ Ejecutando PyInstaller...")
        resultado = subprocess.run(comando, capture_output=True, text=True, cwd="..")
        
        if resultado.returncode == 0:
            print("‚úÖ ¬°EJECUTABLE CREADO EXITOSAMENTE!")
            
            # Verificar que el archivo se cre√≥
            exe_path = "../dist/IBA-SoftEnvioSMS.exe"
            if os.path.exists(exe_path):
                size_mb = os.path.getsize(exe_path) / (1024 * 1024)
                print(f"üìÅ Ubicaci√≥n: {os.path.abspath(exe_path)}")
                print(f"üìè Tama√±o: {size_mb:.2f} MB")
                
                # Mostrar ejemplos de uso
                mostrar_ejemplos_uso()
                return True
            else:
                print("‚ùå Error: El ejecutable no se cre√≥ correctamente")
                return False
        else:
            print("‚ùå Error al crear el ejecutable:")
            print(resultado.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå Error ejecutando PyInstaller: {e}")
        return False

def crear_ejecutable_visor():
    """Crea el ejecutable del visor de logs"""
    print("\nüîß CREANDO EJECUTABLE IBA-SoftVisorLogs.exe")
    print("=" * 60)
    
    # Verificar que el archivo del visor existe
    if not os.path.exists("../src/visor_logs.py"):
        print("‚ùå Error: No se encuentra src/visor_logs.py")
        return False
    
    print("üèóÔ∏è Generando ejecutable del visor...")
    
    # Comando PyInstaller para el visor
    comando = [
        "../.venv/Scripts/pyinstaller.exe",
        "--onefile",                          # Un solo archivo ejecutable
        "--console",                          # Mantener ventana de consola
        "--name=IBA-SoftVisorLogs",          # Nombre del ejecutable
        "--clean",                           # Limpiar cache
        "--noconfirm",                       # No pedir confirmaci√≥n
        "--icon=NONE",                       # Sin icono espec√≠fico
        "src/visor_logs.py"                      # Archivo del visor
    ]
    
    try:
        resultado = subprocess.run(comando, capture_output=True, text=True, cwd="..")
        
        if resultado.returncode == 0:
            print("‚úÖ ¬°EJECUTABLE DEL VISOR CREADO EXITOSAMENTE!")
            
            # Verificar que el archivo se cre√≥
            exe_path = "../dist/IBA-SoftVisorLogs.exe"
            if os.path.exists(exe_path):
                size_mb = os.path.getsize(exe_path) / (1024 * 1024)
                print(f"üìÅ Ubicaci√≥n: {os.path.abspath(exe_path)}")
                print(f"üìè Tama√±o: {size_mb:.2f} MB")
                return True
            else:
                print("‚ùå Error: El ejecutable del visor no se cre√≥ correctamente")
                return False
        else:
            print("‚ùå Error al crear el ejecutable del visor:")
            print(resultado.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå Error ejecutando PyInstaller para el visor: {e}")
        return False

def crear_ambos_ejecutables():
    """Crea ambos ejecutables: principal y visor"""
    print("üè≠ GENERANDO EJECUTABLES AJPD SOFT")
    print("=" * 60)
    
    exito_principal = crear_ejecutable_principal()
    exito_visor = crear_ejecutable_visor()
    
    return exito_principal and exito_visor

def mostrar_ejemplos_uso():
    """Muestra ejemplos de c√≥mo usar el ejecutable"""
    print("\nüéØ EJEMPLOS DE USO DE LOS EJECUTABLES:")
    print("-" * 50)
    
    print("üìß ENVIAR EMAIL:")
    print('IBA-SoftEnvioSMS.exe EMAIL "destino@ejemplo.com" "<h1>Mi mensaje</h1>" "587" "usuario@gmail.com" "password_app" "smtp.gmail.com" "True"')
    
    print("\nüì± ENVIAR SMS:")
    print('IBA-SoftEnvioSMS.exe SMS "+1234567890" "Mensaje de prueba" "COM3"')
    
    print("\nüìä VER LOGS:")
    print('IBA-SoftVisorLogs.exe')
    
    print("\nüí° AYUDA:")
    print('IBA-SoftEnvioSMS.exe')

def crear_script_uso():
    """Crea un script de ejemplo para usar los ejecutables"""
    contenido = '''@echo off
REM Script de ejemplo para usar IBA-Soft Env√≠o SMS/Email
REM Edita las variables con tus datos reales

echo ===============================================
echo    AJPD SOFT - SISTEMA DE ENVIO SMS/EMAIL
echo ===============================================

set EMAIL_DESTINO=destino@ejemplo.com
set EMAIL_USUARIO=tu_usuario@gmail.com
set EMAIL_PASSWORD=tu_contrase√±a_de_aplicacion
set SMS_NUMERO=+1234567890
set SMS_PUERTO=COM3

echo.
echo ¬øQu√© quieres hacer?
echo 1. Email de prueba
echo 2. SMS de prueba
echo 3. Ver logs
echo 4. Visor de logs interactivo
echo 5. Salir
echo.
set /p opcion="Elige una opci√≥n (1-5): "

if "%opcion%"=="1" goto email
if "%opcion%"=="2" goto sms
if "%opcion%"=="3" goto logs
if "%opcion%"=="4" goto visor
if "%opcion%"=="5" goto salir
goto salir

:email
echo.
echo üìß Enviando email de prueba...
IBA-SoftEnvioSMS.exe EMAIL "%EMAIL_DESTINO%" "<h1>Prueba</h1><p>Este es un email de prueba del sistema IBA-Soft.</p>" "587" "%EMAIL_USUARIO%" "%EMAIL_PASSWORD%" "smtp.gmail.com" "True"
pause
goto salir

:sms
echo.
echo üì± Enviando SMS de prueba...
IBA-SoftEnvioSMS.exe SMS "%SMS_NUMERO%" "Prueba SMS desde IBA-Soft" "%SMS_PUERTO%"
pause
goto salir

:logs
echo.
echo üìä Mostrando logs recientes...
if exist logs\\*.log (
    dir logs\\*.log /O-D
    echo.
    echo Contenido del log m√°s reciente:
    for /f %%i in ('dir logs\\*.log /b /O-D') do (
        type "logs\\%%i" | more
        goto fin_logs
    )
    :fin_logs
) else (
    echo No se encontraron archivos de log.
)
pause
goto salir

:visor
echo.
echo üîç Abriendo visor de logs...
IBA-SoftVisorLogs.exe
goto salir

:salir
echo.
echo ¬°Hasta luego!
pause
'''
    
    with open("usar_IBA-Soft.bat", "w", encoding="utf-8") as f:
        f.write(contenido)
    
    print(f"\nüìú Script de ejemplo mejorado creado: usar_IBA-Soft.bat")

def crear_instalador():
    """Crea un instalador simple"""
    contenido = '''@echo off
echo ===============================================
echo    INSTALADOR AJPD SOFT ENVIO SMS/EMAIL
echo ===============================================

REM Crear directorio de instalaci√≥n
set INSTALL_DIR=C:\\IBA-Soft\\EnvioSMS
if not exist "%INSTALL_DIR%" mkdir "%INSTALL_DIR%"

REM Copiar ejecutables
echo üìÅ Copiando archivos...
copy "dist\\IBA-SoftEnvioSMS.exe" "%INSTALL_DIR%\\"
copy "dist\\IBA-SoftVisorLogs.exe" "%INSTALL_DIR%\\"
copy "usar_IBA-Soft.bat" "%INSTALL_DIR%\\"
copy "README.md" "%INSTALL_DIR%\\"
copy "DOCUMENTACION_LOGGING.md" "%INSTALL_DIR%\\"

REM Crear directorio de logs
if not exist "%INSTALL_DIR%\\logs" mkdir "%INSTALL_DIR%\\logs"

REM Agregar al PATH (opcional)
echo.
echo ¬øQuieres agregar IBA-Soft al PATH del sistema? (s/n)
set /p add_path="Esto permitir√° usar los comandos desde cualquier ubicaci√≥n: "

if /i "%add_path%"=="s" (
    echo üîß Agregando al PATH...
    setx PATH "%PATH%;%INSTALL_DIR%" /M
    echo ‚úÖ Agregado al PATH del sistema
)

echo.
echo ‚úÖ ¬°Instalaci√≥n completada!
echo üìÅ Ubicaci√≥n: %INSTALL_DIR%
echo üöÄ Ejecuta: %INSTALL_DIR%\\usar_IBA-Soft.bat
echo üìß Env√≠o SMS/Email: %INSTALL_DIR%\\IBA-SoftEnvioSMS.exe
echo üìä Visor de logs: %INSTALL_DIR%\\IBA-SoftVisorLogs.exe
echo.
pause
'''
    
    with open("instalar_IBA-Soft.bat", "w", encoding="utf-8") as f:
        f.write(contenido)
    
    print(f"üì¶ Instalador mejorado creado: instalar_IBA-Soft.bat")

def main():
    """Funci√≥n principal"""
    print("üè≠ GENERADOR DE EJECUTABLE AJPD SOFT")
    print("=" * 60)
    
    # Verificar entorno
    if not os.path.exists("../.venv"):
        print("‚ùå Error: No se encuentra el entorno virtual")
        print("üí° Ejecuta primero: python -m venv .venv")
        return
    
    # Crear ejecutables
    if crear_ambos_ejecutables():
        # Crear archivos adicionales
        crear_script_uso()
        crear_instalador()
        
        print("\nüéâ ¬°PROCESO COMPLETADO!")
        print(f"‚úÖ Ejecutable principal: ../dist/IBA-SoftEnvioSMS.exe")
        print(f"‚úÖ Ejecutable visor logs: ../dist/IBA-SoftVisorLogs.exe")
        print(f"‚úÖ Script de uso: usar_IBA-Soft.bat")
        print(f"‚úÖ Instalador: instalar_IBA-Soft.bat")
        
        print(f"\nüì¶ PARA DISTRIBUIR:")
        print(f"1. Copia la carpeta 'dist' completa")
        print(f"2. Incluye usar_IBA-Soft.bat e instalar_IBA-Soft.bat")
        print(f"3. O ejecuta 'instalar_IBA-Soft.bat' como administrador")
        
    else:
        print("\n‚ùå Error al crear los ejecutables")
        print("üí° Revisa los errores mostrados arriba")

if __name__ == "__main__":
    main()
